


Option Explicit
Dim n As Integer
Sub LoadCommands()
Dim Commands(9) As String
Dim i, u
Commands(0) = "New Project"
Commands(1) = "This Drawing: # Properties"
Commands(2) = "View Existing Properties"
Commands(3) = "View GoldMine Project Data"
Commands(4) = "Delete All Properties"
Commands(5) = "Add/Update Window/Door Properties"
Commands(6) = "Exterior Finishes"
Commands(7) = "Save New Project"
Commands(8) = "Quit"
    u = UBound(Commands)
    i = 0
    With Me.CommandComboBox
        While i < u
            .AddItem (Commands(i))
        i = i + 1
        Wend
    End With
End Sub
Sub RunCommands()
On Error GoTo ErrHand
n = ThisDrawing.SummaryInfo.NumCustomInfo
Dim lbtxt1, lbtxt2, lbtxt3 As String
Select Case CommandComboBox.ListIndex
    Case 0 'NewProject
            DrawingProperties.DeleteProps
            DrawingProperties.DbImport 'Imports Data from Spreadsheet, sends to UserForms
            frmTitleBlock.Show
    Case 1 'DrawingPropertiesCount
            Dim h As Integer
            h = ThisDrawing.SummaryInfo.NumCustomInfo
            Me.LboxTextOutput1.AddItem "This drawing contains " & h & " properties."
    Case 2 'ViewExistingProperties
            DrawingProperties.ExistingData
            frmTitleBlock.Show
    Case 3 'ImportProjectData
            DrawingProperties.DbImport 'Imports Data from Spreadsheet, sends to UserForms
            frmTitleBlock.Show
    Case 4 'Delete Properties
            DrawingProperties.DeleteProps
    Case 5 'Window/Door
         '   DrawingProperties.DbImport
           frmWinDoor.Show
    Case 6
            frmExtFinishes.Show
'    Case 7 'SaveProject
'            DrawingProperties.DbImport
'            frmTitleBlock.Show
'            frmTitleBlock.SaveDrawing
'            frmTitleBlock.Hide
'            frmMainMenu.LboxTextOutput1.AddItem "Drawing Saved"
'    Case 5 'SaveProject
'            frmTitleBlock.AddTitleBlockProps
'            frmLoadBlock.AddLoadBlockProps
'            If frmStructuralSpecs.cbStrSelect.Text = "WING ONLY" Then
'            frmStructuralSpecs.AddWingProps
'            Else
'            frmStructuralSpecs.AddStrSpecProps
'            End If
'
'            ThisDrawing.Save
'            frmMainMenu.LboxTextOutput1.AddItem "Updated Drawing Properties"
        
    Case 7 'Save & Quit
            Dim msg, Style, Title, Response, MyString
            msg = "Do you want to save these properties to your drawing?"
            Style = vbYesNo + vbCritical + vbDefaultButton2
            Title = "Save Changes?"
            Response = MsgBox(msg, Style, Title)
            If Response = vbYes Then
            MyString = "Yes"    ' Save and Continue.
            ThisDrawing.Save
            Else    ' User chose No.
            MyString = "No"    'Continue without Saving
            End If
            Unload frmLoadBlock
            Unload frmTitleBlock
            Unload frmWinDoor
            Unload frmMainMenu
       ThisDrawing.Regen (acAllViewports)
Exit Sub
    Case 8 'QuitProject
            Unload frmLoadBlock
            Unload frmTitleBlock
            Unload frmWinDoor
            Unload frmMainMenu
Exit Sub
    Case Else
    End Select
     ThisDrawing.Regen (acAllViewports)
Exit Sub
ErrHand:
Dim Msg2
On Error Resume Next
Err.Clear ' Defer error handling
If Err.Number <> 0 Then  ' Check for error, then show message
    Msg2 = "Error # " & str(Err.Number) & " was generated by " _
            & Err.Source & Chr(13) & Err.Description
    MsgBox Msg2, , "Error", Err.HelpFile, Err.HelpContext
End If
End Sub
Private Sub btnOKGO_Click()
    RunCommands
End Sub
Sub NumSumInfo()
n = ThisDrawing.SummaryInfo.NumCustomInfo
 LboxTextOutput1.AddItem ("This Drawing Contains " & n & " Properties.")
End Sub
Private Sub LboxTextOutput1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Dim m
m = MsgBox("Clear Window?", vbOKCancel, "Window Clear")
If m = 0 Then
Me.LboxTextOutput1.Clear
End If
End Sub

Private Sub UserForm_Initialize()
LoadCommands
Load frmTitleBlock
Load frmLoadBlock
Load frmWinDoor
End Sub
'
'Sub TEST1()
'Dim h
'h = ThisDrawing.SummaryInfo.NumCustomInfo
'Debug.Print h
'End Sub

'Private Sub ShowImportedValues()
'    Dim i, u As Integer
'    'Dim txtVal(Q), txtKey(Q) As String
'     i = 0
'     u = UBound(importedValue)
'     While i < u
'        LboxTextOutput1.AddItem (importedValue(i))
'        i = i + 1
'     Wend
'End Sub
'Private Sub ShowExistingProps()
'On Error GoTo 0
'    Dim i, u As Integer
'    'Dim txtVal(Q), txtKey(Q) As String
'     i = 0
'     u = UBound(myValue)
'
'     While i < u
'        LboxTextOutput1.AddItem (myKey(i))
'       ' LboxTextOutput1.AddItem (importedValue(i))
'        i = i + 1
'     Wend
'    Exit Sub
'ErrHand: MsgBox ("error on item " & i)
'End Sub




